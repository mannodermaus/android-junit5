# Shared default parameters and variables
defaults: &defaults
  working_directory: ~/root/project
  resource_class: large
  docker:
    - image: cimg/android:2022.12.1
      environment:
        GRADLE_OPTS: -Xmx4096m -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.caching=true -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false

cache_key: &cache_key
  key: jars-{{ checksum "plugin/build.gradle.kts" }}-{{ checksum "plugin/android-junit5/build.gradle.kts" }}-{{ checksum "plugin/gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "instrumentation/build.gradle.kts" }}-{{ checksum "instrumentation/runner/build.gradle.kts" }}-{{ checksum "instrumentation/sample/build.gradle.kts" }}-{{ checksum "instrumentation/gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build-logic/src/main/kotlin/Environment.kt" }}-{{ checksum "build-logic/src/main/kotlin/Dependencies.kt" }}

commands:
  construct_signing_key:
    description: Construct GPG Signing Key
    steps:
      - run: base64 -d \<<< $SIGNING_KEY_RING_FILE_CONTENTS > $SIGNING_KEY_RING_FILE

version: 2.1
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          <<: *cache_key

      - run:
          name: (Plugin) Build
          command: cd plugin && ./gradlew :android-junit5:assemble --stacktrace --no-daemon
      - run:
          name: (Plugin) Test
          command: cd plugin && ./gradlew :android-junit5:check --stacktrace --no-daemon

      - run:
          name: (Instrumentation) Prepare local.properties
          command: |
            touch instrumentation/local.properties
            echo "junit5.includeCompose = false" > instrumentation/local.properties
      - run:
          name: (Instrumentation) Download Dependencies
          command: cd instrumentation && ./gradlew androidDependencies --no-daemon
      - run:
          name: (Instrumentation) Build
          command: |
            cd instrumentation
            ./gradlew assembleRelease :core:assembleDebug :core:assembleDebugAndroidTest \
            :runner:assembleDebug \
            :sample:assembleDebug --stacktrace --no-daemon
      - run:
          name: (Instrumentation) Test
          command: cd instrumentation && ./gradlew :core:check :runner:check --stacktrace --no-daemon

      - run:
          name: (Compose) Prepare local.properties
          command: |
            touch instrumentation/local.properties
            echo "junit5.includeCompose = true" > instrumentation/local.properties

      - run:
          name: (Compose) Download Dependencies
          command: cd instrumentation && ./gradlew androidDependencies --no-daemon
      - run:
          name: (Compose) Build
          command: |
            cd instrumentation
            ./gradlew :compose:assemble :compose:assembleDebugAndroidTest --stacktrace --no-daemon
      - run:
          name: (Compose) Test
          command: cd instrumentation && ./gradlew :compose:check --stacktrace --no-daemon

      - save_cache:
          <<: *cache_key
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper

      - run:
          name: Store Google Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}

      - run:
          name: Test with Firebase Test Lab
          command: >
            sudo gcloud firebase test android run \
              --type instrumentation \
              --app instrumentation/sample/build/outputs/apk/debug/sample-debug.apk \
              --test instrumentation/core/build/outputs/apk/androidTest/debug/core-debug-androidTest.apk \
              --environment-variables runnerBuilder=de.mannodermaus.junit5.AndroidJUnit5Builder \
              --test-runner-class androidx.test.runner.AndroidJUnitRunner \
              --device model=redfin,version=30,locale=en_US,orientation=portrait \
              --device model=oriole,version=33,locale=en_US,orientation=portrait \
              --results-bucket cloud-test-${GOOGLE_PROJECT_ID} \
              --timeout 15m
      - run:
          name: Install gsutil dependency and copy test results data
          command: |
            mkdir test-lab-results
            sudo gsutil -m cp -r -U `sudo gsutil ls gs://cloud-test-${GOOGLE_PROJECT_ID} | tail -1` test-lab-results/ | true

      - persist_to_workspace:
          root: ~/root
          paths:
            - project
      - store_artifacts:
          path: plugin/android-junit5/build/reports/tests/test
          destination: plugin
      - store_artifacts:
          path: instrumentation/core/build/reports
          destination: instrumentation-core
      - store_artifacts:
          path: test-lab-results
          destination: instrumentation-core/test-lab-results
      - store_artifacts:
          path: instrumentation/runner/build/reports
          destination: instrumentation-runner
      - store_artifacts:
          path: instrumentation/compose/build/reports
          destination: instrumentation-compose

  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/root
      - restore_cache:
          <<: *cache_key
      - construct_signing_key
      - run:
          name: (Plugin) Build & Deploy
          command: cd plugin && ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository --stacktrace --no-daemon
      - run:
          name: (Instrumentation) Build & Deploy
          command: |
            cd instrumentation
            echo "junit5.includeCompose = false" > local.properties
            ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository --stacktrace --no-daemon
      - run:
          name: (Compose) Build & Deploy
          command: |
            cd instrumentation
            echo "junit5.includeCompose = true" > local.properties
            ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository --stacktrace --no-daemon
      - store_artifacts:
          path: plugin/android-junit5/build/publications
          destination: plugin/publications/snapshots
      - store_artifacts:
          path: instrumentation/core/build/publications
          destination: instrumentation-core/publications/snapshots
      - store_artifacts:
          path: instrumentation/runner/build/publications
          destination: instrumentation-runner/publications/snapshots
      - store_artifacts:
          path: instrumentation/compose/build/publications
          destination: instrumentation-compose/publications/snapshots

workflows:
  version: 2

  build_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: main
