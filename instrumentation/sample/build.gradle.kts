import de.mannodermaus.gradle.plugins.junit5.junitPlatform
import org.gradle.api.tasks.testing.logging.TestLogEvent

buildscript {
  repositories {
    google()
    mavenCentral()
    sonatypeSnapshots()
  }

  dependencies {
    // Use a local "Fat JAR" pointing to the Gradle plugin from the sibling project,
    // falling back to the latest stable version if that cannot be located.
    // This requires an explicit task to be executed in the plugin project,
    // since the fat JAR is not generated by default upon building
    val localPluginJar = findLocalPluginJar()
    if (localPluginJar != null) {
      project.logger.warn("!! Using local JAR to provide plugin to module 'sample' (built at ${localPluginJar.lastModifiedDate()}) !!")
      classpath(files(localPluginJar))
    } else {
      val latest = Artifacts.Plugin.latestStableVersion
      classpath("de.mannodermaus.gradle.plugins:android-junit5:$latest")
    }
  }
}

plugins {
  id("com.android.application")
  kotlin("android")
  id("jacoco")
}

apply {
  plugin("de.mannodermaus.android-junit5")
}

val javaVersion = JavaVersion.VERSION_1_8

android {
  compileSdkVersion(Android.compileSdkVersion)

  dexOptions {
    javaMaxHeapSize = Android.javaMaxHeapSize
  }

  defaultConfig {
    applicationId = "de.mannodermaus.junit5.sample"
    minSdkVersion(Android.sampleMinSdkVersion)
    targetSdkVersion(Android.targetSdkVersion)
    versionCode = 1
    versionName = "1.0"

    // Make sure to use the AndroidJUnitRunner (or a sub-class) in order to hook in the JUnit 5 Test Builder
    testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    testInstrumentationRunnerArgument("runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder")

    buildConfigField("boolean", "MY_VALUE", "true")
  }

  // Add Kotlin source directory to all source sets
  sourceSets.forEach {
    it.java.srcDir("src/${it.name}/kotlin")
  }

  compileOptions {
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
  }

  kotlinOptions {
    jvmTarget = javaVersion.toString()
  }

  testOptions {
    junitPlatform {
      // Configure JUnit 5 tests here
      filters("debug") {
        excludeTags("slow")
      }

      // Using local dependency instead of Maven coordinates
      instrumentationTests.integrityCheckEnabled = false
    }
  }
}

tasks.withType<Test> {
  testLogging.events = setOf(TestLogEvent.PASSED, TestLogEvent.SKIPPED, TestLogEvent.FAILED)
}

dependencies {
  implementation(libs.kotlinStdLib)

  testImplementation(libs.junitJupiterApi)
  testImplementation(libs.junitJupiterParams)
  testRuntimeOnly(libs.junitJupiterEngine)

  androidTestImplementation(libs.junit4)
  androidTestImplementation(libs.androidXTestRunner)

  // Android Instrumentation Tests wth JUnit 5
  androidTestImplementation(libs.junitJupiterApi)
  androidTestImplementation(libs.junitJupiterParams)
  androidTestImplementation(libs.espressoCore)
  androidTestImplementation(project(":core"))
  androidTestRuntimeOnly(project(":runner"))
}
